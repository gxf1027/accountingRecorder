<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context"   
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/cache 
     http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
    
    <context:component-scan base-package="cn" />
     
	<context:property-placeholder location="classpath:db.properties" />
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	
	<bean id="datasource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxTotal" value="50" />
		<property name="maxWaitMillis" value="6000" />
		<property name="initialSize" value="10" />
		<property name="maxIdle" value="20"></property>
		<property name="minIdle" value="10" /> 
	</bean>
	
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="datasource" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">	
		<property name="dataSource" ref="datasource" />
	</bean>
	
	
	
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager" />
	
	<!-- 一定要加上scope为prototype -->
	<bean id="account_action" 
		class="cn.gxf.spring.struts.integrate.actions.AccountAction" 
		scope="prototype" />
		
	<bean id="exp_action" 
		class="cn.gxf.spring.struts.integrate.actions.ExpAction"
		scope="prototype" />
		
	<bean id="login_action"
		class="cn.gxf.spring.struts.integrate.actions.LoginSec"
		scope="prototype"/>
		
	<bean id = "accountDetailAction" 
		class = "cn.gxf.spring.struts.integrate.actions.AccountDetailAction"
		scope = "prototype" />
	
	<bean id="incomeDetailAction" 
		class="cn.gxf.spring.struts.integrate.actions.IncomeDetailAction"
		scope="prototype" />
		
	<bean id="paymentDetailAction"
		class="cn.gxf.spring.struts.integrate.actions.PaymentDetailAction"
		scope="prototype"/>
		
	<bean id="transferDetailAction"
		class="cn.gxf.spring.struts.integrate.actions.TransferDetailAction"
		scope="prototype"/>	
		
	<bean id="listDetailAction"
		class ="cn.gxf.spring.struts.integrate.actions.ListDetailAction"
		scope="prototype" />
		
	<bean id="accountBookAction"
		class="cn.gxf.spring.struts.integrate.actions.AccountBookAction"
		scope="prototype"/>
		
	<bean id="registerUserAction" 
		class="cn.gxf.spring.struts.integrate.actions.RegisterUserAction" 
		scope="prototype" />
		
	<bean id="customTailoredQueryAction"
		class="cn.gxf.spring.struts.integrate.actions.CustomTailoredQueryAction"
		scope="prototype" />
		
	<bean id="frontStatisticsAction" 
		class="cn.gxf.spring.struts.integrate.actions.FrontStatisticsAction"
		scope="prototype" />

	<bean id="loanServiceProxy"
		class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean" lazy-init="true" >
		<property name="wsdlDocumentUrl" value="http://localhost:9809/services/LoanService?wsdl" />
		<property name="serviceName" value="LoanService" />
		<property name="portName" value="LoanServiceImplPort"></property>
		<property name="serviceInterface" value="cn.loan.ws.service.LoanService" />
		<property name="namespaceUri" value="http://service.ws.loan.cn/" />
	</bean>
	
	<!-- spring基于EhCache的缓存配置 -->
	<cache:annotation-driven cache-manager="cacheManager" key-generator="userKeyGenerator" />  

	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml"></property>  
    </bean>  
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
        <property name="cacheManager" ref="ehcache"></property>  
    </bean>
    
    <bean id="userKeyGenerator" class="cn.gxf.spring.struts.integrate.test.SpringCacheKeyGenerator" />
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource" />
        <!-- 自动扫描mapping.xml文件，**表示迭代查找 -->
        <property name="mapperLocations" value="classpath:cn/gxf/spring/struts/mybatis/mapper/*.xml" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        
        <property name="plugins">
	        <array>
	            <bean class="com.github.pagehelper.PageInterceptor">
	                <!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
	                <property name="properties">
	                    <value>
	                        helperDialect=mysql
	                    </value>
	                </property>
	            </bean>
	        </array>
	    </property>
	    
    </bean>
    
     <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gxf.spring.struts.mybatis.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
</beans>